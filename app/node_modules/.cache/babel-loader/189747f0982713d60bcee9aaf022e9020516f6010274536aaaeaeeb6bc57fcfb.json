{"ast":null,"code":"var _jsxFileName = \"/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/dashboard.css';\nimport RecipeDetailsModal from './RecipeDetails'; // Modal component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null); // For storing the selected recipe for the modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [favorites, setFavorites] = useState([]); // State for favorite recipes\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) {\n      const fetchRecipes = async () => {\n        try {\n          const {\n            data\n          } = await axios.get(`http://localhost:3001/api/recipes/category/${selectedCategory}`);\n          setRecipes(data); // Assuming data contains an array of recipes\n        } catch (error) {\n          console.error(\"Failed to fetch recipes:\", error);\n        }\n      };\n      fetchRecipes();\n    }\n  }, [selectedCategory]);\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const {\n          data\n        } = await axios.get('/api/recipes/favorites', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFavorites(data.map(fav => fav.idMeal)); // Store the IDs of favorite recipes\n      } catch (error) {\n        console.error('Failed to fetch favorite recipes:', error);\n      }\n    };\n    fetchFavorites();\n  }, []);\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n  };\n  const handleRecipeClick = recipe => {\n    setSelectedRecipe(recipe);\n    setIsModalOpen(true); // Open the modal when a recipe is clicked\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedRecipe(null); // Clear the selected recipe when modal closes\n  };\n  const handleFavoriteClick = async recipe => {\n    const token = localStorage.getItem('token');\n    try {\n      if (favorites.includes(recipe.idMeal)) {\n        await axios.delete(`/api/recipes/favorites/${recipe.idMeal}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFavorites(favorites.filter(id => id !== recipe.idMeal));\n      } else {\n        await axios.post('/api/recipes/favorites', {\n          recipeId: recipe.idMeal\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFavorites([...favorites, recipe.idMeal]);\n      }\n    } catch (error) {\n      console.error('Failed to update favorite recipes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboardcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipe Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categorybuttons\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedCategory === category.strCategory ? 'selected' : '',\n          onClick: () => handleCategoryClick(category.strCategory),\n          children: category.strCategory\n        }, category.idCategory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipeGrid\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.strMealThumb,\n          alt: recipe.strMeal,\n          className: \"recipe-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `recipe-favorite ${favorites.includes(recipe.idMeal) ? 'favorite-active' : ''}`,\n            onClick: () => handleFavoriteClick(recipe),\n            children: favorites.includes(recipe.idMeal) ? '♥' : '♡'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"recipe-title\",\n          children: recipe.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, recipe.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeDetailsModal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      recipe: selectedRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"dJgR0IUirFADlAii7h1o1QlLf2c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","RecipeDetailsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","categories","setCategories","selectedCategory","setSelectedCategory","recipes","setRecipes","selectedRecipe","setSelectedRecipe","isModalOpen","setIsModalOpen","favorites","setFavorites","fetchCategories","data","get","slice","error","console","fetchRecipes","fetchFavorites","token","localStorage","getItem","headers","Authorization","map","fav","idMeal","handleCategoryClick","category","handleRecipeClick","recipe","closeModal","handleFavoriteClick","includes","delete","filter","id","post","recipeId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","strCategory","onClick","idCategory","src","strMealThumb","alt","strMeal","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/dashboard.css';\nimport RecipeDetailsModal from './RecipeDetails'; // Modal component\n\nconst Dashboard = () => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null); // For storing the selected recipe for the modal\n  const [isModalOpen, setIsModalOpen] = useState(false); \n  const [favorites, setFavorites] = useState([]); // State for favorite recipes\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCategory) {\n      const fetchRecipes = async () => {\n        try {\n          const { data } = await axios.get(`http://localhost:3001/api/recipes/category/${selectedCategory}`);\n          setRecipes(data); // Assuming data contains an array of recipes\n        } catch (error) {\n          console.error(\"Failed to fetch recipes:\", error);\n        }\n      };\n\n      fetchRecipes();\n    }\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const { data } = await axios.get('/api/recipes/favorites', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setFavorites(data.map(fav => fav.idMeal)); // Store the IDs of favorite recipes\n      } catch (error) {\n        console.error('Failed to fetch favorite recipes:', error);\n      }\n    };\n\n    fetchFavorites();\n  }, []);\n\n  const handleCategoryClick = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleRecipeClick = (recipe) => {\n    setSelectedRecipe(recipe);\n    setIsModalOpen(true); // Open the modal when a recipe is clicked\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedRecipe(null); // Clear the selected recipe when modal closes\n  };\n\n  const handleFavoriteClick = async (recipe) => {\n    const token = localStorage.getItem('token');\n\n    try {\n      if (favorites.includes(recipe.idMeal)) {\n        await axios.delete(`/api/recipes/favorites/${recipe.idMeal}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setFavorites(favorites.filter(id => id !== recipe.idMeal));\n      } else {\n        await axios.post('/api/recipes/favorites', { recipeId: recipe.idMeal }, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setFavorites([...favorites, recipe.idMeal]);\n      }\n    } catch (error) {\n      console.error('Failed to update favorite recipes:', error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"dashboardcontainer\">\n        <h2>Recipe Categories</h2>\n        <div className=\"categorybuttons\">\n          {categories.map((category) => (\n            <button\n              key={category.idCategory}\n              className={selectedCategory === category.strCategory ? 'selected' : ''}\n              onClick={() => handleCategoryClick(category.strCategory)}\n            >\n              {category.strCategory}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"recipeGrid\">\n        {recipes.map((recipe) => (\n          <div key={recipe.idMeal} className=\"recipe-card\">\n            <img\n              src={recipe.strMealThumb}\n              alt={recipe.strMeal}\n              className=\"recipe-image\"\n            />\n            <div className='mt-2'>\n              <span\n                className={`recipe-favorite ${favorites.includes(recipe.idMeal) ? 'favorite-active' : ''}`}\n                onClick={() => handleFavoriteClick(recipe)}\n              >\n                {favorites.includes(recipe.idMeal) ? '♥' : '♡'}\n              </span>\n            </div>\n            <h3 className=\"recipe-title\">{recipe.strMeal}</h3>\n          </div>\n        ))}\n      </div>\n\n      {selectedRecipe && (\n        <RecipeDetailsModal\n          isOpen={isModalOpen}\n          onRequestClose={closeModal}\n          recipe={selectedRecipe}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAChC,OAAOC,kBAAkB,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMqB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,8CAA8C,CAAC;QAChFb,aAAa,CAACY,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAIW,gBAAgB,EAAE;MACpB,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACF,MAAM;YAAEL;UAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,8CAA8CZ,gBAAgB,EAAE,CAAC;UAClGG,UAAU,CAACQ,IAAI,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF,CAAC;MAEDE,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAAChB,gBAAgB,CAAC,CAAC;EAEtBX,SAAS,CAAC,MAAM;IACd,MAAM4B,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI;QACF,MAAM;UAAET;QAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,wBAAwB,EAAE;UACzDS,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFT,YAAY,CAACE,IAAI,CAACY,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,mBAAmB,GAAIC,QAAQ,IAAK;IACxC1B,mBAAmB,CAAC0B,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpCxB,iBAAiB,CAACwB,MAAM,CAAC;IACzBtB,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMuB,UAAU,GAAGA,CAAA,KAAM;IACvBvB,cAAc,CAAC,KAAK,CAAC;IACrBF,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAM0B,mBAAmB,GAAG,MAAOF,MAAM,IAAK;IAC5C,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACF,IAAIZ,SAAS,CAACwB,QAAQ,CAACH,MAAM,CAACJ,MAAM,CAAC,EAAE;QACrC,MAAMnC,KAAK,CAAC2C,MAAM,CAAC,0BAA0BJ,MAAM,CAACJ,MAAM,EAAE,EAAE;UAC5DJ,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFT,YAAY,CAACD,SAAS,CAAC0B,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKN,MAAM,CAACJ,MAAM,CAAC,CAAC;MAC5D,CAAC,MAAM;QACL,MAAMnC,KAAK,CAAC8C,IAAI,CAAC,wBAAwB,EAAE;UAAEC,QAAQ,EAAER,MAAM,CAACJ;QAAO,CAAC,EAAE;UACtEJ,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFT,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEqB,MAAM,CAACJ,MAAM,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBACE7C,OAAA;MAAK8C,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACjC7C,OAAA;QAAA6C,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlD,OAAA;QAAK8C,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC7BxC,UAAU,CAACyB,GAAG,CAAEI,QAAQ,iBACvBlC,OAAA;UAEE8C,SAAS,EAAEvC,gBAAgB,KAAK2B,QAAQ,CAACiB,WAAW,GAAG,UAAU,GAAG,EAAG;UACvEC,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACC,QAAQ,CAACiB,WAAW,CAAE;UAAAN,QAAA,EAExDX,QAAQ,CAACiB;QAAW,GAJhBjB,QAAQ,CAACmB,UAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKlB,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlD,OAAA;MAAK8C,SAAS,EAAC,YAAY;MAAAD,QAAA,EACxBpC,OAAO,CAACqB,GAAG,CAAEM,MAAM,iBAClBpC,OAAA;QAAyB8C,SAAS,EAAC,aAAa;QAAAD,QAAA,gBAC9C7C,OAAA;UACEsD,GAAG,EAAElB,MAAM,CAACmB,YAAa;UACzBC,GAAG,EAAEpB,MAAM,CAACqB,OAAQ;UACpBX,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFlD,OAAA;UAAK8C,SAAS,EAAC,MAAM;UAAAD,QAAA,eACnB7C,OAAA;YACE8C,SAAS,EAAE,mBAAmB/B,SAAS,CAACwB,QAAQ,CAACH,MAAM,CAACJ,MAAM,CAAC,GAAG,iBAAiB,GAAG,EAAE,EAAG;YAC3FoB,OAAO,EAAEA,CAAA,KAAMd,mBAAmB,CAACF,MAAM,CAAE;YAAAS,QAAA,EAE1C9B,SAAS,CAACwB,QAAQ,CAACH,MAAM,CAACJ,MAAM,CAAC,GAAG,GAAG,GAAG;UAAG;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNlD,OAAA;UAAI8C,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAET,MAAM,CAACqB;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAd1Cd,MAAM,CAACJ,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAelB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELvC,cAAc,iBACbX,OAAA,CAACF,kBAAkB;MACjB4D,MAAM,EAAE7C,WAAY;MACpB8C,cAAc,EAAEtB,UAAW;MAC3BD,MAAM,EAAEzB;IAAe;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA,eACD,CAAC;AAEP,CAAC;AAAC9C,EAAA,CApIID,SAAS;AAAAyD,EAAA,GAATzD,SAAS;AAsIf,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}