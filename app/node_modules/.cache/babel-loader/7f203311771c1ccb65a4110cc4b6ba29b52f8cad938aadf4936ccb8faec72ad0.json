{"ast":null,"code":"var _jsxFileName = \"/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recipe Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: category.strCategory\n      }, category.idCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","categories","setCategories","fetchCategories","data","get","slice","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","strCategory","idCategory","_c","$RefreshReg$"],"sources":["/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n  \n    fetchCategories();\n  }, []);\n  \n\n  return (\n    <div>\n      <h2>Recipe Categories</h2>\n      <ul>\n        {categories.map((category) => (\n          <li key={category.idCategory}>\n            {category.strCategory}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,8CAA8C,CAAC;QAChFH,aAAa,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bf,OAAA;MAAAW,QAAA,EACGR,UAAU,CAACa,GAAG,CAAEC,QAAQ,iBACvBjB,OAAA;QAAAW,QAAA,EACGM,QAAQ,CAACC;MAAW,GADdD,QAAQ,CAACE,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}