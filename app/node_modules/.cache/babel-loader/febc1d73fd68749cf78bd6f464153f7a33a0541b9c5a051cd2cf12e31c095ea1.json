{"ast":null,"code":"var _jsxFileName = \"/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h2>Recipe Categories</h2>\n    //   <ul>\n    //     {categories.map((category) => (\n    //       <li key={category.idCategory}>\n    //         {category.strCategory}\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recipe Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedCategory === category.strCategory ? 'selected' : '',\n            onClick: () => handleCategoryClick(category.strCategory),\n            children: category.strCategory\n          }, category.idCategory, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(Dashboard, \"XAs564uXMF0CEHqAHwLXuz4zR10=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","categories","setCategories","selectedCategory","setSelectedCategory","fetchCategories","data","get","slice","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","category","strCategory","onClick","handleCategoryClick","idCategory","_c","$RefreshReg$"],"sources":["/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/dashboard.css';\n\nconst Dashboard = () => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get('http://localhost:3001/api/recipes/categories');\n        setCategories(data.slice(0, 5)); // Directly slice the array since the response is an array\n      } catch (error) {\n        console.error(\"Failed to fetch categories:\", error);\n      }\n    };\n  \n    fetchCategories();\n  }, []);\n  \n\n  return (\n    // <div>\n    //   <h2>Recipe Categories</h2>\n    //   <ul>\n    //     {categories.map((category) => (\n    //       <li key={category.idCategory}>\n    //         {category.strCategory}\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n<>\n    <div className=\"dashboard-container\">\n      <h2>Recipe Categories</h2>\n      {/* Category Buttons */}\n      <div className=\"category-buttons\">\n        {categories.map((category) => (\n          <button\n            key={category.idCategory}\n            className={selectedCategory === category.strCategory ? 'selected' : ''}\n            onClick={() => handleCategoryClick(category.strCategory)}\n          >\n            {category.strCategory}\n          </button>\n        ))}\n      </div>\n      </div>\n      </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8CAA8C,CAAC;QAChFL,aAAa,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAGN;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJT,OAAA,CAAAE,SAAA;MAAAa,QAAA,eACIf,OAAA;QAAKgB,SAAS,EAAC,qBAAqB;QAAAD,QAAA,gBAClCf,OAAA;UAAAe,QAAA,EAAI;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE1BpB,OAAA;UAAKgB,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAC9BV,UAAU,CAACgB,GAAG,CAAEC,QAAQ,iBACvBtB,OAAA;YAEEgB,SAAS,EAAET,gBAAgB,KAAKe,QAAQ,CAACC,WAAW,GAAG,UAAU,GAAG,EAAG;YACvEC,OAAO,EAAEA,CAAA,KAAMC,mBAAmB,CAACH,QAAQ,CAACC,WAAW,CAAE;YAAAR,QAAA,EAExDO,QAAQ,CAACC;UAAW,GAJhBD,QAAQ,CAACI,UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKlB,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,gBACJ;EAAC;AAET,CAAC;AAAChB,EAAA,CA/CID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}