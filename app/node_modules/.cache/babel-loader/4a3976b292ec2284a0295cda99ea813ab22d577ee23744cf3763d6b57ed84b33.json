{"ast":null,"code":"var _jsxFileName = \"/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/RecipeDetails.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import Modal from 'react-modal';\n// import '../styles/recipeDetails.css';\n\n// Modal.setAppElement('#root');\n\n// const RecipeDetailsModal = ({ isOpen, onRequestClose, recipe }) => {\n//   console.log(\"Modal Open: \", isOpen, \"Recipe: \", recipe); \n//   console.log(recipe); // This should show the recipe data\n// // Add this log\n\n//   return (\n//     <Modal \n//       isOpen={isOpen} \n//       onRequestClose={onRequestClose} \n//       className=\"modal\" \n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <h2>{recipe?.strMeal || 'No Title Available'}</h2>\n//       <p>{recipe?.strInstructions || 'Instructions not available.'}</p>\n//       <img src={recipe?.strMealThumb} alt={recipe?.strMeal || 'No Image'} className=\"modal-image\" />\n//       <button onClick={onRequestClose} className=\"close-modal-button\">Close</button>\n//     </Modal>\n\n//   );\n// };\n\n// export default RecipeDetailsModal;\nimport React, { useState } from 'react';\nimport Modal from 'react-modal'; // Assuming you're using `react-modal` or similar library\n\n// Ensure to bind modal to your appElement (this avoids accessibility warnings)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst RecipeDetails = () => {\n  _s();\n  // State to control modal open/close\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to open the modal\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  // Function to close the modal\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modal Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetails, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = RecipeDetails;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","setAppElement","RecipeDetails","_s","isOpen","setIsOpen","handleOpen","handleClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onRequestClose","className","_c","Dashboard","$RefreshReg$"],"sources":["/Users/samithadilshan/Documents/Company_Projects/CodeSec_Global_Assigment/recipe-app/src/components/RecipeDetails.js"],"sourcesContent":["// import React from 'react';\n// import Modal from 'react-modal';\n// import '../styles/recipeDetails.css';\n\n// Modal.setAppElement('#root');\n\n// const RecipeDetailsModal = ({ isOpen, onRequestClose, recipe }) => {\n//   console.log(\"Modal Open: \", isOpen, \"Recipe: \", recipe); \n//   console.log(recipe); // This should show the recipe data\n// // Add this log\n\n//   return (\n//     <Modal \n//       isOpen={isOpen} \n//       onRequestClose={onRequestClose} \n//       className=\"modal\" \n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <h2>{recipe?.strMeal || 'No Title Available'}</h2>\n//       <p>{recipe?.strInstructions || 'Instructions not available.'}</p>\n//       <img src={recipe?.strMealThumb} alt={recipe?.strMeal || 'No Image'} className=\"modal-image\" />\n//       <button onClick={onRequestClose} className=\"close-modal-button\">Close</button>\n//     </Modal>\n\n\n  \n\n//   );\n// };\n\n// export default RecipeDetailsModal;\nimport React, { useState } from 'react';\nimport Modal from 'react-modal'; // Assuming you're using `react-modal` or similar library\n\n// Ensure to bind modal to your appElement (this avoids accessibility warnings)\nModal.setAppElement('#root'); \n\nconst RecipeDetails = () => {\n  // State to control modal open/close\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to open the modal\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  // Function to close the modal\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      {/* Button to trigger modal opening */}\n      <button onClick={handleOpen}>Open Modal</button>\n\n      {/* Modal Component */}\n      <Modal isOpen={isOpen} onRequestClose={handleClose}>\n        <div className=\"modal-content\">\n          <h2>Modal Test</h2>\n          <p>This is a test</p>\n          <button onClick={handleClose}>Close Modal</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;;EAED;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBF,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEL,OAAA;IAAAQ,QAAA,gBAEER,OAAA;MAAQS,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGhDb,OAAA,CAACF,KAAK;MAACM,MAAM,EAAEA,MAAO;MAACU,cAAc,EAAEP,WAAY;MAAAC,QAAA,eACjDR,OAAA;QAAKe,SAAS,EAAC,eAAe;QAAAP,QAAA,gBAC5BR,OAAA;UAAAQ,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBb,OAAA;UAAAQ,QAAA,EAAG;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrBb,OAAA;UAAQS,OAAO,EAAEF,WAAY;UAAAC,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACV,EAAA,CA7BID,aAAa;AAAAc,EAAA,GAAbd,aAAa;AA+BnB,eAAee,SAAS;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}